<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fudian.project.ams.mapper.TransferBillMapper">
  <resultMap id="BaseResultMap" type="com.fudian.project.ams.pojo.TransferBill">
    <!--@mbg.generated-->
    <!--@Table transfer_bill-->
    <id column="trans_id" property="transId" />
    <id column="trans_bill_index" property="transBillIndex" />
    <result column="a01_id" property="a01Id" />
    <result column="a0101" property="a0101" />
    <result column="org_name" property="orgName" />
    <result column="dept_id" property="deptId" />
    <result column="duty" property="duty" />
    <result column="e01z721" property="e01z721" />
    <result column="e01z711" property="e01z711" />
    <result column="e01z714" property="e01z714" />
    <result column="mat_num" property="matNum" />
    <result column="e01z731" property="e01z731" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    trans_id, trans_bill_index, a01_id, a0101, org_name, dept_id, duty, e01z721, e01z711,
    e01z714, mat_num, e01z731
  </sql>
  <select id="selectByExample" parameterType="com.fudian.project.ams.pojo.TransferBillExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transfer_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fudian.project.ams.pojo.TransferBillExample">
    <!--@mbg.generated-->
    delete from transfer_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.fudian.project.ams.pojo.TransferBillExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from transfer_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update transfer_bill
    <set>
      <if test="record.transId != null">
        trans_id = #{record.transId},
      </if>
      <if test="record.transBillIndex != null">
        trans_bill_index = #{record.transBillIndex},
      </if>
      <if test="record.a01Id != null">
        a01_id = #{record.a01Id},
      </if>
      <if test="record.a0101 != null">
        a0101 = #{record.a0101},
      </if>
      <if test="record.orgName != null">
        org_name = #{record.orgName},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId},
      </if>
      <if test="record.duty != null">
        duty = #{record.duty},
      </if>
      <if test="record.e01z721 != null">
        e01z721 = #{record.e01z721},
      </if>
      <if test="record.e01z711 != null">
        e01z711 = #{record.e01z711},
      </if>
      <if test="record.e01z714 != null">
        e01z714 = #{record.e01z714},
      </if>
      <if test="record.matNum != null">
        mat_num = #{record.matNum},
      </if>
      <if test="record.e01z731 != null">
        e01z731 = #{record.e01z731},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update transfer_bill
    set trans_id = #{record.transId},
    trans_bill_index = #{record.transBillIndex},
    a01_id = #{record.a01Id},
    a0101 = #{record.a0101},
    org_name = #{record.orgName},
    dept_id = #{record.deptId},
    duty = #{record.duty},
    e01z721 = #{record.e01z721},
    e01z711 = #{record.e01z711},
    e01z714 = #{record.e01z714},
    mat_num = #{record.matNum},
    e01z731 = #{record.e01z731}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update transfer_bill
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="a01_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.a01Id}
        </foreach>
      </trim>
      <trim prefix="a0101 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.a0101}
        </foreach>
      </trim>
      <trim prefix="org_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.orgName}
        </foreach>
      </trim>
      <trim prefix="dept_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.deptId}
        </foreach>
      </trim>
      <trim prefix="duty = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.duty}
        </foreach>
      </trim>
      <trim prefix="e01z721 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.e01z721}
        </foreach>
      </trim>
      <trim prefix="e01z711 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.e01z711}
        </foreach>
      </trim>
      <trim prefix="e01z714 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.e01z714}
        </foreach>
      </trim>
      <trim prefix="mat_num = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.matNum}
        </foreach>
      </trim>
      <trim prefix="e01z731 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when trans_id = #{item.transId} then #{item.e01z731}
        </foreach>
      </trim>
    </trim>
    where trans_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.transId}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into transfer_bill
    (trans_id, trans_bill_index, a01_id, a0101, org_name, dept_id, duty, e01z721, e01z711,
    e01z714, mat_num, e01z731)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.transId}, #{item.transBillIndex}, #{item.a01Id}, #{item.a0101}, #{item.orgName},
      #{item.deptId}, #{item.duty}, #{item.e01z721}, #{item.e01z711}, #{item.e01z714},
      #{item.matNum}, #{item.e01z731})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.fudian.project.ams.pojo.TransferBill">
    <!--@mbg.generated-->
    insert into transfer_bill
    (trans_id, trans_bill_index, a01_id, a0101, org_name, dept_id, duty, e01z721, e01z711,
    e01z714, mat_num, e01z731)
    values
    (#{transId}, #{transBillIndex}, #{a01Id}, #{a0101}, #{orgName}, #{deptId}, #{duty},
    #{e01z721}, #{e01z711}, #{e01z714}, #{matNum}, #{e01z731})
    on duplicate key update
    trans_id = #{transId},
    trans_bill_index = #{transBillIndex},
    a01_id = #{a01Id},
    a0101 = #{a0101},
    org_name = #{orgName},
    dept_id = #{deptId},
    duty = #{duty},
    e01z721 = #{e01z721},
    e01z711 = #{e01z711},
    e01z714 = #{e01z714},
    mat_num = #{matNum},
    e01z731 = #{e01z731}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.fudian.project.ams.pojo.TransferBill">
    <!--@mbg.generated-->
    insert into transfer_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        trans_id,
      </if>
      <if test="transBillIndex != null">
        trans_bill_index,
      </if>
      <if test="a01Id != null">
        a01_id,
      </if>
      <if test="a0101 != null">
        a0101,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="duty != null">
        duty,
      </if>
      <if test="e01z721 != null">
        e01z721,
      </if>
      <if test="e01z711 != null">
        e01z711,
      </if>
      <if test="e01z714 != null">
        e01z714,
      </if>
      <if test="matNum != null">
        mat_num,
      </if>
      <if test="e01z731 != null">
        e01z731,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        #{transId},
      </if>
      <if test="transBillIndex != null">
        #{transBillIndex},
      </if>
      <if test="a01Id != null">
        #{a01Id},
      </if>
      <if test="a0101 != null">
        #{a0101},
      </if>
      <if test="orgName != null">
        #{orgName},
      </if>
      <if test="deptId != null">
        #{deptId},
      </if>
      <if test="duty != null">
        #{duty},
      </if>
      <if test="e01z721 != null">
        #{e01z721},
      </if>
      <if test="e01z711 != null">
        #{e01z711},
      </if>
      <if test="e01z714 != null">
        #{e01z714},
      </if>
      <if test="matNum != null">
        #{matNum},
      </if>
      <if test="e01z731 != null">
        #{e01z731},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="transId != null">
        trans_id = #{transId},
      </if>
      <if test="transBillIndex != null">
        trans_bill_index = #{transBillIndex},
      </if>
      <if test="a01Id != null">
        a01_id = #{a01Id},
      </if>
      <if test="a0101 != null">
        a0101 = #{a0101},
      </if>
      <if test="orgName != null">
        org_name = #{orgName},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId},
      </if>
      <if test="duty != null">
        duty = #{duty},
      </if>
      <if test="e01z721 != null">
        e01z721 = #{e01z721},
      </if>
      <if test="e01z711 != null">
        e01z711 = #{e01z711},
      </if>
      <if test="e01z714 != null">
        e01z714 = #{e01z714},
      </if>
      <if test="matNum != null">
        mat_num = #{matNum},
      </if>
      <if test="e01z731 != null">
        e01z731 = #{e01z731},
      </if>
    </trim>
  </insert>
  <select id="queryBillsByMap" resultType="java.util.Map">
    select
    transfer_batch.id,
    transfer_batch.org_id as orgId,
    e01z704a,
    e01z704b,
    e01z701,
    person_num as personNum,
    e01z717,
    e01z724,
    e01z727,
    ramark,
    trans_id as transId,
    trans_bill_index as transBillIndex,
    a01_id as a01Id,
    a01.state as state,
    transfer_bill.a0101,
    org_name as orgName,
    transfer_bill.dept_id as deptId,
    transfer_bill.duty,
    e01z721,
    e01z711,
    e01z714,
    mat_num as matNum,
    e01z731,
    file_name as fileName
    from transfer_bill
    left join transfer_batch
    on transfer_bill.trans_id = transfer_batch.id
    left join sys_dept
    on sys_dept.id = transfer_bill.dept_id
    left join a01
    on transfer_bill.a01_id = a01.id
    left join sys_file
    on transfer_bill.trans_id = sys_file.binding_id
    <where>
      <if test="personName!=null">
        (transfer_bill.a0101 LIKE CONCAT("%",#{personName}, "%") or a01.a0102 LIKE CONCAT("%",#{personName}, "%"))
      </if>
      <if test="deptName!=null">
        and sys_dept.dept_name LIKE CONCAT("%",#{deptName}, "%")
      </if>
      <if test="beginTime!=null and endTime!=null">
        and transfer_batch.e01z701 BETWEEN #{beginTime} and #{endTime}
      </if>
      <if test="transId!=null">
        and transfer_batch.id LIKE CONCAT("%",#{transId}, "%")
      </if>
      <if test="deptId!=null">
        and transfer_bill.dept_id = #{deptId}
      </if>
      <if test="checkYear!=null">
        and (transfer_batch.e01z701 LIKE CONCAT("",#{checkYear}, "%"))
      </if>
      and transfer_batch.id is not null
    </where>
    ORDER BY transfer_batch.id desc,transfer_bill.trans_bill_index
  </select>

  <!-- 档案转出明细台账 -->
  <select id="highDetail" resultType="java.util.Map" parameterType="map">
    select
    transfer_batch.id,
    org_id as orgId,
    e01z704a,
    e01z704b,
    e01z701,
    person_num as personNum,
    e01z717,
    e01z724,
    e01z727,
    ramark,
    trans_id as transId,
    trans_bill_index as transBillIndex,
    a01_id a01Id,
    a0101,
    org_name as orgName,
    dept_id as deptId,
    duty,
    e01z721,
    e01z711,
    e01z714,
    mat_num as matNum,
    e01z731
    from transfer_bill
    left join transfer_batch
    on transfer_bill.trans_id = transfer_batch.id
    left join sys_dept
    on sys_dept.id = transfer_bill.dept_id
    where ${data} ORDER BY transfer_batch.e01z701
    <!--    <where>-->
    <!--      <if test="a0101!=null">-->
    <!--        transfer_bill.a0101 LIKE CONCAT("%",#{a0101}, "%")-->
    <!--      </if>-->

    <!--      <if test="beginTime!=null and endTime!=null">-->
    <!--        and transfer_batch.e01z701 BETWEEN #{beginTime} and #{endTime}-->
    <!--      </if>-->

    <!--      <if test="transId!=null">-->
    <!--        and transfer_batch.id = #{transId}-->
    <!--      </if>-->
    <!--      <if test="deptId!=null">-->
    <!--        and transfer_bill.dept_id = #{deptId}-->
    <!--      </if>-->

    <!--    </where>-->
    <!--    ORDER BY transfer_batch.e01z701-->
  </select>
</mapper>
