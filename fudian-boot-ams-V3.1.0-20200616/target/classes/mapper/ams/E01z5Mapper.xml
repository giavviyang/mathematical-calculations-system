<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fudian.project.ams.mapper.E01z5Mapper">
  <resultMap id="BaseResultMap" type="com.fudian.project.ams.pojo.E01z5">
    <!--@mbg.generated-->
    <!--@Table e01z5-->
    <id column="id" property="id" />
    <result column="org_id" property="orgId" />
    <result column="a01_id" property="a01Id" />
    <result column="e01z501" property="e01z501" />
    <result column="e01z504" property="e01z504" />
    <result column="e01z507a" property="e01z507a" />
    <result column="e01z507b" property="e01z507b" />
    <result column="e01z511" property="e01z511" />
    <result column="e01z514" property="e01z514" />
    <result column="e01z517" property="e01z517" />
    <result column="e01z521" property="e01z521" />
    <result column="e01z524" property="e01z524" />
    <result column="e01z527" property="e01z527" />
    <result column="e01z531" property="e01z531" />
    <result column="e01z534" property="e01z534" />
    <result column="e01z537" property="e01z537" />
    <result column="e01z541" property="e01z541" />
    <result column="e01z544" property="e01z544" />
    <result column="duty" property="duty" />
    <result column="reason" property="reason" />
    <result column="trans_id" property="transId" />
    <result column="score" property="score" />
    <result column="problem" property="problem" />
    <result column="is_copy" property="isCopy" />
    <result column="copy_save" property="copySave" />
    <result column="lack" property="lack" />
    <result column="catalog" property="catalog" />
    <result column="dept_id" property="deptId" />
  </resultMap>
  <resultMap id="BaseResultMapWithPersonName" type="java.util.Map">
    <!--@mbg.generated-->
    <!--@Table e01z5-->
    <!--@Table a01-->
    <id column="id" property="id" />
    <result column="org_id" property="orgId" />
    <result column="a01_id" property="a01Id" />
    <result column="e01z501" property="e01z501" />
    <result column="e01z504" property="e01z504" />
    <result column="e01z507a" property="e01z507a" />
    <result column="e01z507b" property="e01z507b" />
    <result column="e01z511" property="e01z511" />
    <result column="e01z514" property="e01z514" />
    <result column="e01z517" property="e01z517" />
    <result column="e01z521" property="e01z521" />
    <result column="e01z524" property="e01z524" />
    <result column="e01z527" property="e01z527" />
    <result column="e01z531" property="e01z531" />
    <result column="e01z534" property="e01z534" />
    <result column="e01z537" property="e01z537" />
    <result column="e01z541" property="e01z541" />
    <result column="e01z544" property="e01z544" />
    <result column="duty" property="duty" />
    <result column="reason" property="reason" />
    <result column="trans_id" property="transId" />
    <result column="score" property="score" />
    <result column="problem" property="problem" />
    <result column="is_copy" property="isCopy" />
    <result column="copy_save" property="copySave" />
    <result column="lack" property="lack" />
    <result column="catalog" property="catalog" />
    <result column="dept_id" property="deptId" />
    <result column="a0101" property="a0101" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, org_id, a01_id, e01z501, e01z504, e01z507a, e01z507b, e01z511, e01z514, e01z517,
    e01z521, e01z524, e01z527, e01z531, e01z534, e01z537, e01z541, e01z544, duty, reason,
    trans_id, score, problem, is_copy, copy_save, lack, `catalog`, dept_id
  </sql>
  <sql id="Base_Column_ListWithPersonName">
    <!--@mbg.generated-->
    e01z5.id, e01z5.org_id, e01z5.a01_id, e01z5.e01z501, e01z5.e01z504, e01z5.e01z507a, e01z5.e01z507b, e01z5.e01z511, e01z5.e01z514, e01z5.e01z517,
    e01z5.e01z521, e01z5.e01z524, e01z5.e01z527, e01z5.e01z531, e01z5.e01z534, e01z5.e01z537, e01z5.e01z541, e01z5.e01z544, e01z5.duty, e01z5.reason,
    e01z5.trans_id, e01z5.score, e01z5.problem, e01z5.is_copy, e01z5.copy_save, e01z5.lack, e01z5.`catalog`, e01z5.dept_id,a01.a0101
  </sql>
  <select id="selectByExample" parameterType="com.fudian.project.ams.pojo.E01z5Example" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e01z5
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fudian.project.ams.pojo.E01z5Example">
    <!--@mbg.generated-->
    delete from e01z5
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.fudian.project.ams.pojo.E01z5Example" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from e01z5
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update e01z5
    <set>
      <if test="record.id != null">
        id = #{record.id},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId},
      </if>
      <if test="record.a01Id != null">
        a01_id = #{record.a01Id},
      </if>
      <if test="record.e01z501 != null">
        e01z501 = #{record.e01z501},
      </if>
      <if test="record.e01z504 != null">
        e01z504 = #{record.e01z504},
      </if>
      <if test="record.e01z507a != null">
        e01z507a = #{record.e01z507a},
      </if>
      <if test="record.e01z507b != null">
        e01z507b = #{record.e01z507b},
      </if>
      <if test="record.e01z511 != null">
        e01z511 = #{record.e01z511},
      </if>
      <if test="record.e01z514 != null">
        e01z514 = #{record.e01z514},
      </if>
      <if test="record.e01z517 != null">
        e01z517 = #{record.e01z517},
      </if>
      <if test="record.e01z521 != null">
        e01z521 = #{record.e01z521},
      </if>
      <if test="record.e01z524 != null">
        e01z524 = #{record.e01z524},
      </if>
      <if test="record.e01z527 != null">
        e01z527 = #{record.e01z527},
      </if>
      <if test="record.e01z531 != null">
        e01z531 = #{record.e01z531},
      </if>
      <if test="record.e01z534 != null">
        e01z534 = #{record.e01z534},
      </if>
      <if test="record.e01z537 != null">
        e01z537 = #{record.e01z537},
      </if>
      <if test="record.e01z541 != null">
        e01z541 = #{record.e01z541},
      </if>
      <if test="record.e01z544 != null">
        e01z544 = #{record.e01z544},
      </if>
      <if test="record.duty != null">
        duty = #{record.duty},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason},
      </if>
      <if test="record.transId != null">
        trans_id = #{record.transId},
      </if>
      <if test="record.score != null">
        score = #{record.score},
      </if>
      <if test="record.problem != null">
        problem = #{record.problem},
      </if>
      <if test="record.isCopy != null">
        is_copy = #{record.isCopy},
      </if>
      <if test="record.copySave != null">
        copy_save = #{record.copySave},
      </if>
      <if test="record.lack != null">
        lack = #{record.lack},
      </if>
      <if test="record.catalog != null">
        `catalog` = #{record.catalog},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update e01z5
    set id = #{record.id},
    org_id = #{record.orgId},
    a01_id = #{record.a01Id},
    e01z501 = #{record.e01z501},
    e01z504 = #{record.e01z504},
    e01z507a = #{record.e01z507a},
    e01z507b = #{record.e01z507b},
    e01z511 = #{record.e01z511},
    e01z514 = #{record.e01z514},
    e01z517 = #{record.e01z517},
    e01z521 = #{record.e01z521},
    e01z524 = #{record.e01z524},
    e01z527 = #{record.e01z527},
    e01z531 = #{record.e01z531},
    e01z534 = #{record.e01z534},
    e01z537 = #{record.e01z537},
    e01z541 = #{record.e01z541},
    e01z544 = #{record.e01z544},
    duty = #{record.duty},
    reason = #{record.reason},
    trans_id = #{record.transId},
    score = #{record.score},
    problem = #{record.problem},
    is_copy = #{record.isCopy},
    copy_save = #{record.copySave},
    lack = #{record.lack},
    `catalog` = #{record.catalog},
    dept_id = #{record.deptId}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update e01z5
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="org_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.orgId}
        </foreach>
      </trim>
      <trim prefix="a01_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.a01Id}
        </foreach>
      </trim>
      <trim prefix="e01z501 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z501}
        </foreach>
      </trim>
      <trim prefix="e01z504 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z504}
        </foreach>
      </trim>
      <trim prefix="e01z507a = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z507a}
        </foreach>
      </trim>
      <trim prefix="e01z507b = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z507b}
        </foreach>
      </trim>
      <trim prefix="e01z511 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z511}
        </foreach>
      </trim>
      <trim prefix="e01z514 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z514}
        </foreach>
      </trim>
      <trim prefix="e01z517 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z517}
        </foreach>
      </trim>
      <trim prefix="e01z521 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z521}
        </foreach>
      </trim>
      <trim prefix="e01z524 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z524}
        </foreach>
      </trim>
      <trim prefix="e01z527 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z527}
        </foreach>
      </trim>
      <trim prefix="e01z531 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z531}
        </foreach>
      </trim>
      <trim prefix="e01z534 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z534}
        </foreach>
      </trim>
      <trim prefix="e01z537 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z537}
        </foreach>
      </trim>
      <trim prefix="e01z541 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z541}
        </foreach>
      </trim>
      <trim prefix="e01z544 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z544}
        </foreach>
      </trim>
      <trim prefix="duty = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.duty}
        </foreach>
      </trim>
      <trim prefix="reason = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.reason}
        </foreach>
      </trim>
      <trim prefix="trans_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.transId}
        </foreach>
      </trim>
      <trim prefix="score = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.score}
        </foreach>
      </trim>
      <trim prefix="problem = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.problem}
        </foreach>
      </trim>
      <trim prefix="is_copy = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.isCopy}
        </foreach>
      </trim>
      <trim prefix="copy_save = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.copySave}
        </foreach>
      </trim>
      <trim prefix="lack = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.lack}
        </foreach>
      </trim>
      <trim prefix="`catalog` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.catalog}
        </foreach>
      </trim>
      <trim prefix="dept_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.deptId}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into e01z5
    (id, org_id, a01_id, e01z501, e01z504, e01z507a, e01z507b, e01z511, e01z514, e01z517,
    e01z521, e01z524, e01z527, e01z531, e01z534, e01z537, e01z541, e01z544, duty, reason,
    trans_id, score, problem, is_copy, copy_save, lack, `catalog`, dept_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.orgId}, #{item.a01Id}, #{item.e01z501}, #{item.e01z504}, #{item.e01z507a},
      #{item.e01z507b}, #{item.e01z511}, #{item.e01z514}, #{item.e01z517}, #{item.e01z521},
      #{item.e01z524}, #{item.e01z527}, #{item.e01z531}, #{item.e01z534}, #{item.e01z537},
      #{item.e01z541}, #{item.e01z544}, #{item.duty}, #{item.reason}, #{item.transId},
      #{item.score}, #{item.problem}, #{item.isCopy}, #{item.copySave}, #{item.lack},
      #{item.catalog}, #{item.deptId})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.fudian.project.ams.pojo.E01z5">
    <!--@mbg.generated-->
    insert into e01z5
    (id, org_id, a01_id, e01z501, e01z504, e01z507a, e01z507b, e01z511, e01z514, e01z517,
    e01z521, e01z524, e01z527, e01z531, e01z534, e01z537, e01z541, e01z544, duty, reason,
    trans_id, score, problem, is_copy, copy_save, lack, `catalog`, dept_id)
    values
    (#{id}, #{orgId}, #{a01Id}, #{e01z501}, #{e01z504}, #{e01z507a}, #{e01z507b}, #{e01z511},
    #{e01z514}, #{e01z517}, #{e01z521}, #{e01z524}, #{e01z527}, #{e01z531}, #{e01z534},
    #{e01z537}, #{e01z541}, #{e01z544}, #{duty}, #{reason}, #{transId}, #{score}, #{problem},
    #{isCopy}, #{copySave}, #{lack}, #{catalog}, #{deptId})
    on duplicate key update
    id = #{id},
    org_id = #{orgId},
    a01_id = #{a01Id},
    e01z501 = #{e01z501},
    e01z504 = #{e01z504},
    e01z507a = #{e01z507a},
    e01z507b = #{e01z507b},
    e01z511 = #{e01z511},
    e01z514 = #{e01z514},
    e01z517 = #{e01z517},
    e01z521 = #{e01z521},
    e01z524 = #{e01z524},
    e01z527 = #{e01z527},
    e01z531 = #{e01z531},
    e01z534 = #{e01z534},
    e01z537 = #{e01z537},
    e01z541 = #{e01z541},
    e01z544 = #{e01z544},
    duty = #{duty},
    reason = #{reason},
    trans_id = #{transId},
    score = #{score},
    problem = #{problem},
    is_copy = #{isCopy},
    copy_save = #{copySave},
    lack = #{lack},
    `catalog` = #{catalog},
    dept_id = #{deptId}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.fudian.project.ams.pojo.E01z5">
    <!--@mbg.generated-->
    insert into e01z5
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="a01Id != null">
        a01_id,
      </if>
      <if test="e01z501 != null">
        e01z501,
      </if>
      <if test="e01z504 != null">
        e01z504,
      </if>
      <if test="e01z507a != null">
        e01z507a,
      </if>
      <if test="e01z507b != null">
        e01z507b,
      </if>
      <if test="e01z511 != null">
        e01z511,
      </if>
      <if test="e01z514 != null">
        e01z514,
      </if>
      <if test="e01z517 != null">
        e01z517,
      </if>
      <if test="e01z521 != null">
        e01z521,
      </if>
      <if test="e01z524 != null">
        e01z524,
      </if>
      <if test="e01z527 != null">
        e01z527,
      </if>
      <if test="e01z531 != null">
        e01z531,
      </if>
      <if test="e01z534 != null">
        e01z534,
      </if>
      <if test="e01z537 != null">
        e01z537,
      </if>
      <if test="e01z541 != null">
        e01z541,
      </if>
      <if test="e01z544 != null">
        e01z544,
      </if>
      <if test="duty != null">
        duty,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="transId != null">
        trans_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="problem != null">
        problem,
      </if>
      <if test="isCopy != null">
        is_copy,
      </if>
      <if test="copySave != null">
        copy_save,
      </if>
      <if test="lack != null">
        lack,
      </if>
      <if test="catalog != null">
        `catalog`,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="orgId != null">
        #{orgId},
      </if>
      <if test="a01Id != null">
        #{a01Id},
      </if>
      <if test="e01z501 != null">
        #{e01z501},
      </if>
      <if test="e01z504 != null">
        #{e01z504},
      </if>
      <if test="e01z507a != null">
        #{e01z507a},
      </if>
      <if test="e01z507b != null">
        #{e01z507b},
      </if>
      <if test="e01z511 != null">
        #{e01z511},
      </if>
      <if test="e01z514 != null">
        #{e01z514},
      </if>
      <if test="e01z517 != null">
        #{e01z517},
      </if>
      <if test="e01z521 != null">
        #{e01z521},
      </if>
      <if test="e01z524 != null">
        #{e01z524},
      </if>
      <if test="e01z527 != null">
        #{e01z527},
      </if>
      <if test="e01z531 != null">
        #{e01z531},
      </if>
      <if test="e01z534 != null">
        #{e01z534},
      </if>
      <if test="e01z537 != null">
        #{e01z537},
      </if>
      <if test="e01z541 != null">
        #{e01z541},
      </if>
      <if test="e01z544 != null">
        #{e01z544},
      </if>
      <if test="duty != null">
        #{duty},
      </if>
      <if test="reason != null">
        #{reason},
      </if>
      <if test="transId != null">
        #{transId},
      </if>
      <if test="score != null">
        #{score},
      </if>
      <if test="problem != null">
        #{problem},
      </if>
      <if test="isCopy != null">
        #{isCopy},
      </if>
      <if test="copySave != null">
        #{copySave},
      </if>
      <if test="lack != null">
        #{lack},
      </if>
      <if test="catalog != null">
        #{catalog},
      </if>
      <if test="deptId != null">
        #{deptId},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="orgId != null">
        org_id = #{orgId},
      </if>
      <if test="a01Id != null">
        a01_id = #{a01Id},
      </if>
      <if test="e01z501 != null">
        e01z501 = #{e01z501},
      </if>
      <if test="e01z504 != null">
        e01z504 = #{e01z504},
      </if>
      <if test="e01z507a != null">
        e01z507a = #{e01z507a},
      </if>
      <if test="e01z507b != null">
        e01z507b = #{e01z507b},
      </if>
      <if test="e01z511 != null">
        e01z511 = #{e01z511},
      </if>
      <if test="e01z514 != null">
        e01z514 = #{e01z514},
      </if>
      <if test="e01z517 != null">
        e01z517 = #{e01z517},
      </if>
      <if test="e01z521 != null">
        e01z521 = #{e01z521},
      </if>
      <if test="e01z524 != null">
        e01z524 = #{e01z524},
      </if>
      <if test="e01z527 != null">
        e01z527 = #{e01z527},
      </if>
      <if test="e01z531 != null">
        e01z531 = #{e01z531},
      </if>
      <if test="e01z534 != null">
        e01z534 = #{e01z534},
      </if>
      <if test="e01z537 != null">
        e01z537 = #{e01z537},
      </if>
      <if test="e01z541 != null">
        e01z541 = #{e01z541},
      </if>
      <if test="e01z544 != null">
        e01z544 = #{e01z544},
      </if>
      <if test="duty != null">
        duty = #{duty},
      </if>
      <if test="reason != null">
        reason = #{reason},
      </if>
      <if test="transId != null">
        trans_id = #{transId},
      </if>
      <if test="score != null">
        score = #{score},
      </if>
      <if test="problem != null">
        problem = #{problem},
      </if>
      <if test="isCopy != null">
        is_copy = #{isCopy},
      </if>
      <if test="copySave != null">
        copy_save = #{copySave},
      </if>
      <if test="lack != null">
        lack = #{lack},
      </if>
      <if test="catalog != null">
        `catalog` = #{catalog},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId},
      </if>
    </trim>
  </insert>
  <select id="queryByMap" parameterType="java.util.Map"  resultMap="BaseResultMapWithPersonName">
    select
    <include refid="Base_Column_ListWithPersonName" />
    from e01z5
    left join a01
    on e01z5.a01_Id=a01.id
    left join sys_dept
    on e01z5.dept_id = sys_dept.id
    left join sys_file
    on e01z5.id = sys_file.binding_id
    <where>
      <if test="checkYear!=null">
        (e01z5.e01z501 LIKE CONCAT("",#{checkYear}, "%"))
      </if>
      <if test="personName!=null">
        and (a01.a0101 LIKE CONCAT("%",#{personName}, "%") or a01.a0102 like CONCAT("%",#{personName},"%"))
      </if>
      <if test="deptName!=null">
        and (sys_dept.dept_name LIKE CONCAT("%",#{deptName}, "%"))
      </if>
      <if test="e01z501!=null">
        and e01z5.e01z501 = #{e01z501}
      </if>
    </where>
    order by e01z5.e01z501 DESC
  </select>
    <select id="summaryE01z5" resultType="java.util.Map">
      SELECT
        COUNT(e01z5.`id`) AS 'num',
        LEFT(e01z5.`e01z501`,6) AS 'month'
      FROM e01z5
      GROUP BY LEFT(e01z5.`e01z501`,6)
    </select>
</mapper>
