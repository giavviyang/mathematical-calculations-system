<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fudian.project.ams.mapper.E01z6Mapper">
  <resultMap id="BaseResultMap" type="com.fudian.project.ams.pojo.E01z6">
    <!--@mbg.generated-->
    <!--@Table e01z6-->
    <id column="id" property="id" />
    <result column="org_id" property="orgId" />
    <result column="a01_id" property="a01Id" />
    <result column="e01z601" property="e01z601" />
    <result column="e01z604" property="e01z604" />
    <result column="e01z607" property="e01z607" />
    <result column="e01z611" property="e01z611" />
    <result column="e01z614" property="e01z614" />
    <result column="checker" property="checker" />
    <result column="e01z617" property="e01z617" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, org_id, a01_id, e01z601, e01z604, e01z607, e01z611, e01z614, checker, e01z617
  </sql>
  <select id="selectByExample" parameterType="com.fudian.project.ams.pojo.E01z6Example" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e01z6
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fudian.project.ams.pojo.E01z6Example">
    <!--@mbg.generated-->
    delete from e01z6
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.fudian.project.ams.pojo.E01z6Example" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from e01z6
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update e01z6
    <set>
      <if test="record.id != null">
        id = #{record.id},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId},
      </if>
      <if test="record.a01Id != null">
        a01_id = #{record.a01Id},
      </if>
      <if test="record.e01z601 != null">
        e01z601 = #{record.e01z601},
      </if>
      <if test="record.e01z604 != null">
        e01z604 = #{record.e01z604},
      </if>
      <if test="record.e01z607 != null">
        e01z607 = #{record.e01z607},
      </if>
      <if test="record.e01z611 != null">
        e01z611 = #{record.e01z611},
      </if>
      <if test="record.e01z614 != null">
        e01z614 = #{record.e01z614},
      </if>
      <if test="record.checker != null">
        checker = #{record.checker},
      </if>
      <if test="record.e01z617 != null">
        e01z617 = #{record.e01z617},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update e01z6
    set id = #{record.id},
      org_id = #{record.orgId},
      a01_id = #{record.a01Id},
      e01z601 = #{record.e01z601},
      e01z604 = #{record.e01z604},
      e01z607 = #{record.e01z607},
      e01z611 = #{record.e01z611},
      e01z614 = #{record.e01z614},
      checker = #{record.checker},
      e01z617 = #{record.e01z617}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update e01z6
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="org_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.orgId}
        </foreach>
      </trim>
      <trim prefix="a01_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.a01Id}
        </foreach>
      </trim>
      <trim prefix="e01z601 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z601}
        </foreach>
      </trim>
      <trim prefix="e01z604 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z604}
        </foreach>
      </trim>
      <trim prefix="e01z607 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z607}
        </foreach>
      </trim>
      <trim prefix="e01z611 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z611}
        </foreach>
      </trim>
      <trim prefix="e01z614 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z614}
        </foreach>
      </trim>
      <trim prefix="checker = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.checker}
        </foreach>
      </trim>
      <trim prefix="e01z617 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.e01z617}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into e01z6
    (id, org_id, a01_id, e01z601, e01z604, e01z607, e01z611, e01z614, checker, e01z617
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.orgId}, #{item.a01Id}, #{item.e01z601}, #{item.e01z604}, #{item.e01z607}, 
        #{item.e01z611}, #{item.e01z614}, #{item.checker}, #{item.e01z617})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.fudian.project.ams.pojo.E01z6">
    <!--@mbg.generated-->
    insert into e01z6
    (id, org_id, a01_id, e01z601, e01z604, e01z607, e01z611, e01z614, checker, e01z617
      )
    values
    (#{id}, #{orgId}, #{a01Id}, #{e01z601}, #{e01z604}, #{e01z607}, #{e01z611}, #{e01z614}, 
      #{checker}, #{e01z617})
    on duplicate key update 
    id = #{id}, 
    org_id = #{orgId}, 
    a01_id = #{a01Id}, 
    e01z601 = #{e01z601}, 
    e01z604 = #{e01z604}, 
    e01z607 = #{e01z607}, 
    e01z611 = #{e01z611}, 
    e01z614 = #{e01z614}, 
    checker = #{checker}, 
    e01z617 = #{e01z617}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.fudian.project.ams.pojo.E01z6">
    <!--@mbg.generated-->
    insert into e01z6
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="a01Id != null">
        a01_id,
      </if>
      <if test="e01z601 != null">
        e01z601,
      </if>
      <if test="e01z604 != null">
        e01z604,
      </if>
      <if test="e01z607 != null">
        e01z607,
      </if>
      <if test="e01z611 != null">
        e01z611,
      </if>
      <if test="e01z614 != null">
        e01z614,
      </if>
      <if test="checker != null">
        checker,
      </if>
      <if test="e01z617 != null">
        e01z617,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="orgId != null">
        #{orgId},
      </if>
      <if test="a01Id != null">
        #{a01Id},
      </if>
      <if test="e01z601 != null">
        #{e01z601},
      </if>
      <if test="e01z604 != null">
        #{e01z604},
      </if>
      <if test="e01z607 != null">
        #{e01z607},
      </if>
      <if test="e01z611 != null">
        #{e01z611},
      </if>
      <if test="e01z614 != null">
        #{e01z614},
      </if>
      <if test="checker != null">
        #{checker},
      </if>
      <if test="e01z617 != null">
        #{e01z617},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="orgId != null">
        org_id = #{orgId},
      </if>
      <if test="a01Id != null">
        a01_id = #{a01Id},
      </if>
      <if test="e01z601 != null">
        e01z601 = #{e01z601},
      </if>
      <if test="e01z604 != null">
        e01z604 = #{e01z604},
      </if>
      <if test="e01z607 != null">
        e01z607 = #{e01z607},
      </if>
      <if test="e01z611 != null">
        e01z611 = #{e01z611},
      </if>
      <if test="e01z614 != null">
        e01z614 = #{e01z614},
      </if>
      <if test="checker != null">
        checker = #{checker},
      </if>
      <if test="e01z617 != null">
        e01z617 = #{e01z617},
      </if>
    </trim>
  </insert>
</mapper>